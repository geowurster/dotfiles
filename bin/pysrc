#!/usr/bin/env python3


"""Print an object's source code. Probably not very robust."""


import argparse
import inspect
import sys


def _parser():

    parser = argparse.ArgumentParser(
        description='Print source code for an object'
    )
    parser.add_argument('attrpath')

    return parser


def importer(path_to_object):
    if '.' not in path_to_object:
        return __import__(path_to_object)
    base, obj = path_to_object.rsplit('.', 1)
    m = getattr(__import__(base, fromlist=[obj]), obj)
    return m


def main(attrpath):

    try:
        obj = importer(attrpath)
    except ImportError:
        print('ERROR: could not import:', attrpath, file=sys.stderr)
        return 1

    print(inspect.getsource(obj))

    return 0


if __name__ == '__main__':
    args = _parser().parse_args()
    exit_code = main(**vars(args))
    exit(exit_code)
